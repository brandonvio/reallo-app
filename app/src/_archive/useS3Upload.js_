import React from "react";
import { useDropzone } from "react-dropzone";
import axios from "axios";

export const useS3Upload = ({ presignedUploadUrl, onUploadStart, onUploadReady, onError }) => {
  async function handleDrop([pendingImage]) {
    console.log("handleDrop");
    // Let the caller know that a file has been selected and a fetch is beginning.
    onUploadStart();

    console.log(presignedUploadUrl);
    console.log(pendingImage);
    let response = {};

    // Upload the image to our pre-signed URL.
    try {
      const options = {
        method: "PUT",
        headers: { "content-type": "image/" },
        data: pendingImage,
        url: presignedUploadUrl
      };

      axios(options)
        .then(function(response) {
          // handle success
          console.log(response);
        })
        .catch(function(error) {
          // handle error
          console.log(error);
        })
        .finally(function() {
          // always executed
        });

      // response = await fetch(
      //   new Request(presignedUploadUrl, {
      //     method: "PUT",
      //     body: pendingImage,
      //     headers: new Headers({
      //       "Content-Type": "image/*"
      //     })
      //   })
      // );
    } catch (error) {
      console.log(error);
    }

    console.log(response);

    if (response.status !== 200) {
      console.log(response);
      // The upload failed, so let's notify the caller.
      onError();
      return;
    }
    // Let the caller know that the upload is done, so that it can send the URL
    // to the backend again, persisting it to the database.
    onUploadReady();
  }

  return useDropzone({
    accept: "image/*",
    disabled: typeof presignedUploadUrl !== "string",
    onDrop: handleDrop
  });
};
